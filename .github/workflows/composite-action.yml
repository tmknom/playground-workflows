name: Docs Composite Action
on:
  workflow_call:

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    env:
      BASE_BRANCH: ${{ github.event.repository.default_branch }}
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1
        with:
          ref: ${{ env.BASE_BRANCH }}

      - name: Generate unique identifier
        id: unique
        run: |
          set -x
          identifier="${GITHUB_JOB}-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}-${GITHUB_WORKFLOW_SHA}"
          echo "identifier=${identifier}" >> "${GITHUB_OUTPUT}"

      # https://github.com/tmknom/actdocs
      - name: Inject document
        env:
          YAML_FILE: action.yml
          MD_FILE: README.md
        run: |
          set -x
          docker run --rm -v "$(pwd):/work" -w "/work" \
          ghcr.io/tmknom/actdocs inject --sort \
          --file "${MD_FILE}" "${YAML_FILE}"

      - name: Git config
        run: |
          set -x
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Git diff
        id: git
        run: |
          set -x
          if [[ "$(git status -s)" != "" ]]; then
            echo "diff=true" >> "${GITHUB_OUTPUT}"
          else
            echo "diff=false" >> "${GITHUB_OUTPUT}"
          fi

      - name: Push
        id: push
        if: ${{ steps.git.outputs.diff == 'true' }}
        env:
          IDENTIFIER: ${{ steps.unique.outputs.identifier }}
        run: |
          set -x
          branch="docs/auto/${IDENTIFIER}"
          title="docs: update README"
          message="Generated by ${GITHUB_WORKFLOW} workflow."
          log="- ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

          git switch -c "${branch}"
          git add .
          git commit -m "${title}" -m "${message}" -m "${log}"
          git push origin "${branch}" --force
          echo "branch=${branch}" >> "${GITHUB_OUTPUT}"

      - name: Create PR
        if: ${{ steps.git.outputs.diff == 'true' }}
        env:
          BRANCH: ${{ steps.push.outputs.branch }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          set -x
          gh pr create --base "${BASE_BRANCH}" --head "${BRANCH}" --fill-first
