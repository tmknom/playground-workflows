name: Reusable Release
on:
  workflow_call:
    inputs:
      name:
        type: string
        required: true
        description: The name of the building docker image.
      description:
        type: string
        required: true
        description: The description of the building docker image.
      version:
        type: string
        required: true
        description: The version of the building docker image.
      push:
        type: string
        required: true
        description: The flag to enable/disable docker push. Specify false for build only.
    secrets:
      dockerhub-token:
        required: true
        description: Personal access token used to log against Docker Hub.

permissions: {}

defaults:
  run:
    shell: bash

jobs:
  push:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        env:
          BASE_URL: ${{ github.server_url }}/${{ github.repository }}
        with:
          images: |
            ${{ github.repository_owner }}/${{ inputs.name }}
            ghcr.io/${{ github.repository }}/${{ inputs.name }}
          tags: |
            type=semver,pattern={{version}},value=v${{ inputs.version }}
          labels: |
            org.opencontainers.image.title=${{ inputs.name }}
            org.opencontainers.image.description=${{ inputs.description }}
            org.opencontainers.image.url=${{ env.BASE_URL }}/tree/main/${{ inputs.name }}
            org.opencontainers.image.source=${{ env.BASE_URL }}/blob/main/${{ inputs.name }}/Dockerfile
            org.opencontainers.image.documentation=${{ env.BASE_URL }}/blob/main/${{ inputs.name }}/README.md
            org.opencontainers.image.authors=[${{ github.repository_owner }}](${{ github.server_url }}/${{ github.repository_owner }})

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ inputs.push == 'true' }}
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.dockerhub-token }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ inputs.push == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and Push
        id: push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: ${{ inputs.name }}/
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  sign:
    if: ${{ inputs.push == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [push]
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout
        uses: tmknom/checkout-action@v1

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Generate metadata
        id: metadata
        env:
          ARTIFACTS: ${{ steps.goreleaser.outputs.artifacts }}
        run: |
          set -x
          manifest_digest="$(jq -r '. | map(select(.type=="Docker Manifest"))[0] | .extra.Digest' <<<"${ARTIFACTS}")"
          echo "manifest-digest=${manifest_digest}" >> "${GITHUB_OUTPUT}"

      - name: Attest container images
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ghcr.io/${{ github.repository }}/test-release # TODO
          subject-digest: ${{ steps.metadata.outputs.manifest-digest }} # TODO
          push-to-registry: true

      - name: Sign
        env:
          IMAGE_DIGEST: ${{ steps.push.outputs.digest }} # TODO
          IMAGE_REPOSITORY: ${{ steps.image.outputs.repository }} # TODO
        run: |
          set -x
          cosign sign \
            --oidc-issuer=https://token.actions.githubusercontent.com \
            --oidc-provider=github-actions \
            --yes \
            "${IMAGE_REPOSITORY}@${IMAGE_DIGEST}"

      - name: Retrieve OIDC Token
        id: oidc
        uses: tmknom/retrieve-oidc-token-action@4c373152cedf7f42b1e496e245236449d8d57121 # v0.2.1

      - name: Verify by Cosign
        env:
          IMAGE_DIGEST: ${{ steps.push.outputs.digest }}
          IMAGE_REPOSITORY: ${{ steps.image.outputs.repository }}
          JOB_WORKFLOW_REF: ${{ steps.oidc.outputs.job_workflow_ref }}
        run: |
          set -x
          cosign verify \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity "${GITHUB_SERVER_URL}/${JOB_WORKFLOW_REF}" \
            --certificate-github-workflow-repository "${GITHUB_REPOSITORY}" \
            --certificate-github-workflow-sha "${GITHUB_SHA}" \
            "${IMAGE_REPOSITORY}@${IMAGE_DIGEST}"
