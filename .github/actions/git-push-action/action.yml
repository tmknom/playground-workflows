name: Git Push
description: |
  This action create a new commit and push changes back to the remote repository.
  It automatically commits files which have been changed during the workflow run.

  ## Usage

  ```yaml
    steps:
      - name: Git Push
        uses: tmknom/git-push-action@v0
        with:
          message: add useful feature
  ```

inputs:
  message:
    required: true
    description: The commit message.

outputs:
  pushed:
    value: ${{ steps.push.outcome == 'success' && 'true' || 'false' }}
    description: Whether to pushed into repository.
  branch:
    value: ${{ steps.push.outputs.branch }}
    description: Name of the pushed branch.

runs:
  using: composite

  steps:
    - name: Generate unique identifier
      id: unique
      run: |
        echo "::group::Generate unique identifier"
        set -x
        current="$(date '+%Y%m%d-%H%M%S')"
        random="$(openssl rand -base64 16 | tr -dc 'a-zA-Z0-9')"
        identifier="${current}-${GITHUB_JOB}-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}-${GITHUB_SHA}-${random}"
        echo "identifier=${identifier}" >> "${GITHUB_OUTPUT}"
        echo "::endgroup::"
      shell: bash

    - name: Git diff status
      id: status
      run: |
        echo "::group::Git diff status"
        set -x
        if [[ "$(git status -s)" != "" ]]; then
          echo "diff=true" >> "${GITHUB_OUTPUT}"
        else
          echo "diff=false" >> "${GITHUB_OUTPUT}"
        fi
        echo "::endgroup::"
      shell: bash

    - name: Git push
      id: push
      if: ${{ steps.status.outputs.diff == 'true' }}
      env:
        MESSAGE: ${{ inputs.message }}
        IDENTIFIER: ${{ steps.unique.outputs.identifier }}
      run: |
        echo "::group::Git push"
        set -x
        branch="auto/${IDENTIFIER}"
        log="Generated by ${GITHUB_WORKFLOW} workflow."
        url="- ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"

        git switch -c "${branch}"
        git add .
        git commit -m "${MESSAGE}" -m "${log}" -m "${url}"
        git push origin "${branch}"
        echo "branch=${branch}" >> "${GITHUB_OUTPUT}"
        echo "::endgroup::"
