name: Cross Labeler
description: |
  This action serves as a convenient wrapper for [actions/labeler][labeler].
  Automatically label new pull requests based on the paths of files being changed or the branch name, similar to [actions/labeler][labeler].

  ## Usage

  ### Configuration Type

  ```yaml
    steps:
      - name: Cross Labeler
        uses: tmknom/cross-labeler-action@v0
        with:
          configuration-type: conventional-commits
  ```

  The `configuration-type` supports the following parameters:

  - `conventional-commits`: the branch name that start with [Conventional Commit][conventional] types

  ### Configuration Path

  ```yaml
    steps:
      - name: Cross Labeler
        uses: tmknom/cross-labeler-action@v0
        with:
          configuration-path: .github/labeler.yml
  ```

  You must create a YAML file to define your configuration.
  See details configuration syntax for labeler in [actions/labeler][labeler].

inputs:
  configuration-type:
    required: false
    description: The type for the label configurations, supported for {conventional-commits}.
  configuration-path:
    required: false
    description: The path for the label configurations.

runs:
  using: composite

  steps:
    - name: Start log group
      run: echo "::group::Cross Labeler"
      shell: bash

    - name: Select configuration file based on configuration type
      id: select
      if: ${{ inputs.configuration-type != '' }}
      env:
        CONFIGURATION_TYPE: ${{ inputs.configuration-type }}
      run: |
        set -x
        case "${CONFIGURATION_TYPE}" in
          conventional-commits ) config="conventional-commits.yml" ;;
          * ) echo "::error:: invalid configuration-type: ${CONFIGURATION_TYPE}"; exit 1 ;;
        esac
        echo "path=${GITHUB_ACTION_PATH}/configurations/${config}" >> "${GITHUB_OUTPUT}"
      shell: bash

    - name: Show configuration
      id: config
      env:
        CONFIG_PATH: ${{ steps.select.outputs.path || inputs.configuration-path }}
      run: |
        set -x
        echo "path=${CONFIG_PATH}" >> "${GITHUB_OUTPUT}"
        cat "${CONFIG_PATH}" || true
      shell: bash

    - name: End log group
      run: echo "::endgroup::"
      shell: bash

    - name: Labeler
      uses: actions/labeler@8558fd74291d67161a8a78ce36a881fa63b766a9 # v5.0.0
      with:
        sync-labels: true
        configuration-path: ${{ steps.config.outputs.path }}
