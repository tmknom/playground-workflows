name: Cross Yamllint
description: |
  This action runs [yamllint][yamllint], a tool designed to lint YAML files.

  > [!NOTE]
  > yamllint checks not only for syntax validity,
  > but also detects potential bugs like key repetition,
  > and style problems such as lines length, trailing spaces, indentation, etc.

  ## Usage

  To set up the action, you need to create a YAML file that defines your configurations.
  Refer to the detailed configuration syntax for the yamllint in [yamllint/Rules][yamllint_rules].

  ### Configuration Path

  ```yaml
    steps:
      - name: Cross Yamllint
        uses: tmknom/cross-yamllint-action@v0
        with:
          configuration-path: .yamllint.yml
  ```

inputs:
  configuration-path:
    required: false
    description: The path for the yamllint configurations.

runs:
  using: composite

  steps:
    - name: Validate configuration
      id: config
      env:
        CONFIG_PATH: ${{ inputs.configuration-path }}
        DEFAULT_CONFIG_PATH: .yamllint.yml
      run: |
        echo "::group::Validate configuration"
        set -x
        if [[ "${CONFIG_PATH}" != "" && -f "${CONFIG_PATH}" ]]; then
          valid="${CONFIG_PATH}"
        elif [[ -f "${DEFAULT_CONFIG_PATH}" ]]; then
          title="configuration file for the yamllint was omitted"
          message="recommend explicitly specifying the configuration file"
          echo "::notice title=${title}::${message}"
          valid="${DEFAULT_CONFIG_PATH}"
        else
          title="not found configuration file for the yamllint"
          message="ensure that you specify valid configuration-path"
          echo "::warning:: ${title}: ${detail}"
        fi
        echo "path=${valid}" >> "${GITHUB_OUTPUT}"
        echo "::endgroup::"
      shell: bash

    - name: Show configuration
      if: ${{ steps.config.outputs.path != '' }}
      env:
        CONFIG_PATH: ${{ steps.config.outputs.path }}
      run: |
        echo "::group::Show configuration"
        set -x
        cat "${CONFIG_PATH}"
        echo "::endgroup::"
      shell: bash

    - name: Run yamllint
      env:
        OPTIONS: ${{ steps.prepare.outputs.options }}
      run: |
        echo "::group::Run yamllint"
        set -x
        options=(--strict --format github)
        if [[ "${CONFIG_PATH}" != "" ]]; then
          options+=(--config-file "${CONFIG_PATH}")
        fi
        yamllint "${options[@]}" .
        echo "::endgroup::"
      shell: bash
